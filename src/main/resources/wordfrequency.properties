# Files to be parsed should be inside folder resources.
# Use comma to separate the list of files.
#files.to.parse=input/file-01-english.txt,input/file-02-french.txt,input/file-03-latin.txt,input/file-04-portuguese.txt,input/file-05-spanish.txt,input/file-06-log.txt
files.to.parse=input/file-01-english.txt,input/file-02-french.txt,input/file-03-latin.txt,input/file-04-portuguese.txt,input/file-05-spanish.txt

# use stop words? if it is set to true, the program
# will use the stop words from stop.words.file
use.stop.words=false

# stop words - a set of commonly used words (such as "the")
# that the program will ignore if use.stop.words=true
stop.words.file=stopwords/stop-words-english.txt

# Number of words each term can have. E.g. if the value
# is 3, then there will be 3 output files:
# one file for terms with 1 word, another file for terms
# with 2 words, and a third file with terms with 3 words
number.of.words.per.term=40

# This property informs what is the minimum of frequency for each term, e.g.
# if minimum frequency is 2, that means that the term should show up at least
# 2 times, otherwise the tuple (term,frequency) will not show up in the output file.
minimum.frequency.threshold=3

# Regular expression used to remove some characters while parsing the files.
# The value I am using, [^\\p{L}0-9_.\\- ], represents any char that is not
# a blank, a letter in any language, digit, underscore, minus sign, or dot.
regular.expression=[^\\p{L}0-9_.\\- ]
